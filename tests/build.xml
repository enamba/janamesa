<?xml version="1.0" encoding="UTF-8"?>

<project name="lieferando" default="build" basedir=".">
    <property name="source" value="src"/>
    <property name="apiDocTargetDir" value="/tmp/apidoc" />
    <property name="optionalPhpunitParams" value=""/>

    <target name="clean" description="Clean up and create artifact directories">

        <echo message="cleaning files from older builds" />

        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <delete dir="${basedir}/build/htmlreport"/>

        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <mkdir dir="${basedir}/build/htmlreport"/>

        <antcall target="clean-temp-files" />
    </target>

    <target name="clean-temp-files" description="clear temporary files">

        <echo message="cleaning temporary files" />

        <delete dir="${source}/application/templates/latex/compile/" />
        <delete dir="${source}/application/views/smarty/template_c/"/>
        <delete dir="${source}/public/media/javascript/compiled/" />
        <delete dir="${source}/application/views/smarty/cache/" />
        <delete dir="${source}/storage"/>
        <delete dir="${source}/public/cache/"/>

        <mkdir dir="${source}/application/templates/latex/compile/" />
        <mkdir dir="${source}/application/views/smarty/template_c"/>
        <mkdir dir="${source}/public/media/javascript/compiled/" />
        <mkdir dir="${source}/application/views/smarty/cache/" />
        <mkdir dir="${source}/storage"/>
        <mkdir dir="${source}/public/cache/"/>
        
        <delete file="${source}/tests/incompleteSkippedTests.txt" />

    </target>
    
    <target name="phpunit">
        <echo message="running phpunit with process-isolation" />

        <exec dir="${source}/tests/" executable="phpunit" failonerror="true">
            <arg line="--configuration phpunit.xml --debug --process-isolation ${optionalPhpunitParams}" />
        </exec>
    </target>

    <target name="phpunitanalyses">
        <echo message="running phpunit with phpunit_analyses configuration" />

        <exec dir="${source}/tests/" executable="phpunit" failonerror="false">
            <arg line="--configuration phpunit_analyses.xml --debug ${optionalPhpunitParams}" />
        </exec>
    </target>

    <target name="parallelTasks" description="Run the pdepend, phpcpd, phpcs and phploc tasks in parallel using a maximum of 2 threads.">
        <parallel threadCount="1">
            <antcall target="pdepend"/>
            <antcall target="phpcpd"/>
            <antcall target="phpcs"/>
            <antcall target="phploc"/>
            <antcall target="phpmd"/>
            <antcall target="jslint"/>
        </parallel>
    </target>

    <target name="pdepend" description="Generate jdepend.xml and software metrics charts using PHP_Depend">

        <echo message="running PHP Depend for collection software metrics" />

        <exec executable="pdepend">
            <arg line="--jdepend-xml=${basedir}/build/logs/jdepend.xml
              --jdepend-chart=${basedir}/build/pdepend/dependencies.svg
              --overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg
              --ignore=${source}/library/Zend,${source}/library/ZendX,${source}/library/Bvb,${source}/library/Bav,${source}/library/pChart,${source}/doc,${source}/scripts,${source}/tests,${source}/tools
              ${source}/application" />
        </exec>
    </target>

    <target name="phpmd" description="Generate pmd.xml using PHPMD">

        <echo message="running PHP Messdetector" />

        <exec executable="phpmd">
            <arg line="${source}
              xml
              ${source}/tests/tools/phpmd-rulesets/unusedcode.xml
              --reportfile ${basedir}/build/logs/phpmd-report.xml
              --exclude ${source}/library/Zend,${source}/library/ZendX,${source}/library/Bvb,${source}/library/Bav,${source}/library/pChart,${source}/doc,${source}/scripts,${source}/tests,${source}/tools" />
        </exec>
    </target>


    <target name="phpcpd" description="Generate pmd-cpd.xml using PHPCPD">

        <antcall target="clean-temp-files" />

        <echo message="running PHP Copy/Paste Detector" />

        <exec executable="phpcpd">
            <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml ${source}/application
		--exclude ${source}/application/views/template_c,${source}/application/data/migration,${source}/application/templates/latex/compile,${source}/library/Zend,${source}/library/ZendX,${source}/library/Bvb,${source}/library/Bav,${source}/library/pChart,${source}/doc,${source}/scripts,${source}/tests,${source}/tools" />
        </exec>
    </target>

    <target name="phploc" description="Generate phploc.csv">

        <echo message="running PHPLoc to measuring the size of our project" />

        <exec executable="phploc">
            <arg line="--log-csv
                       ${basedir}/build/logs/phploc.csv
                       ${source}/application
                       --exclude ${source}/library/Zend,${source}/library/ZendX,${source}/library/Bvb,${source}/library/Bav,${source}/library/pChart,${source}/doc,${source}/scripts,${source}/tests,${source}/tools" />
        </exec>
    </target>

    <target name="phpcs" description="Generate checkstyle.xml using PHP_CodeSniffer">

        <antcall target="clean-temp-files" />

        <echo message="running PHP Codesniffer for creating checkstyle report" />

        <exec executable="phpcs" failonerror="false">
            <arg line="--report=checkstyle
              --report-file=${basedir}/build/logs/checkstyle.xml
              --standard=${source}/tests/lieferando_standards.xml
              ${source}/application" />
        </exec>
    </target>

    <target name="phpdoc" description="Generate API documentation using PHPDocumentor">

        <echo message="running PHP Documentor" />

        <exec executable="phpdoc">
            <arg line="-d ${source}/application -t ${basedir}/build/logs/api
		--ignore=${source}/library/Zend,${source}/library/ZendX,${source}/library/Bvb,${source}/library/Bav,${source}/library/pChart,${source}/doc,${source}/scripts,${source}/tests,${source}/tools" />
        </exec>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">

        <echo message="running PHP CodeBrowser" />

        <exec executable="phpcb">
            <arg line="--log ${basedir}/build/logs
              --source ${source}/application
              --output ${basedir}/build/code-browser" />
        </exec>
    </target>

    <target name="apidoc" description="Create Documentation for Rest-API and publish">

        <echo message="starting to create PhpDoc in ${apiDocTargetDir}" />

        <exec executable="phpdoc" >
            <arg line="-d ${source}/application/controllers/Get/ -t ${apiDocTargetDir} -i CallController.php  -o HTML:Smarty:PHP" />
        </exec>

        <echo message="successfully created PhpDoc in ${apiDocTargetDir}" />

        <echo message="copying PhpDoc from ${apiDocTargetDir} to 83.169.2.100:/home/sam/htdocs/phpdoc (phpdoc.yourdelivery.de) now" />

        <scp todir="root:kVih75ux@83.169.2.100:/home/sam/htdocs/phpdoc">
            <fileset dir="${apiDocTargetDir}"/>
        </scp>

        <echo message="successfully copied PhpDoc from ${apiDocTargetDir} to 83.169.2.100:/home/sam/htdocs/phpdoc (phpdoc.yourdelivery.de)" />
    </target>


    <target name="jslint" description="Run the JSLint tool on JS files">
        <fileset dir="${source}/public/media/javascript/" id="jsfiles.raw">
            <include name="**/*.js" />
            <exclude name="compiled/*" />
            <exclude name="external/*" />
            <exclude name="library/jquery/**" />
        </fileset>
        <pathconvert pathsep=" " property="jsfiles.clean" refid="jsfiles.raw" />

        <echo message="running jsLint for javascript files" />

        <exec executable="java" output="${basedir}/build/logs/jslint.xml">
            <arg line="-jar ${source}/tests/tools/jslint4java.jar --report xml ${jsfiles.clean}" />
        </exec>
    </target>

    <target name="build" depends="clean,phpunit"/>

    <target name="buildanalyses" depends="clean,phpunitanalyses,pdepend,phpcpd,phpcs,phploc,phpmd,jslint"/>
</project>
